name: CI

on: [push, pull_request]

jobs:
  windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.10"
      - name: Prepare directories
        run: |
          mkdir -p contrib/build-wine/dist
          chmod -R 777 contrib/build-wine/dist
      - name: Builder image
        env:
          TARGET_OS: Windows
        run: docker build -t electrum-wine-builder-img ./contrib/build-wine/
      - name: Compile Windows binary
        run: |
          docker run \
            --name electrum-wine-builder-cont \
            -v $PWD:/opt/wine64/drive_c/electrum \
            -v $PWD/.git:/opt/wine64/drive_c/electrum/.git:ro \
            -v $PWD/contrib/build-wine/dist:/opt/wine64/drive_c/electrum/contrib/build-wine/dist \
            --rm \
            --workdir /opt/wine64/drive_c/electrum/contrib/build-wine \
            --user $(id -u):$(id -g) \
            electrum-wine-builder-img \
            ./make_win.sh
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: electrum-${{ github.sha }}-windows
          path: contrib/build-wine/dist/*.exe

  appimage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.10"
      - name: Prepare directories
        run: |
          mkdir -p dist
          chmod -R 777 dist
      - name: Builder image
        run: docker build -t electrum-appimage-builder-img ./contrib/build-linux/appimage/
      - name: Compile Linux AppImage
        run: |
          docker run \
            --name electrum-appimage-builder-cont \
            -v $PWD:/opt/electrum \
            -v $PWD/.git:/opt/electrum/.git:ro \
            -v $PWD/dist:/opt/electrum/dist \
            --rm \
            --workdir /opt/electrum/contrib/build-linux/appimage \
            --user $(id -u):$(id -g) \
            electrum-appimage-builder-img \
            ./make_appimage.sh
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: electrum-${{ github.sha }}-appimage
          path: dist/*.AppImage

  tarball:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prepare directories
        run: |
          mkdir -p dist
          chmod -R 777 dist
      - name: Builder image
        run: docker build -t electrum-sdist-builder-img ./contrib/build-linux/sdist/
      - name: Compile Linux tarball
        run: |
          docker run \
            --name electrum-sdist-builder-cont \
            -v $PWD:/opt/electrum \
            -v $PWD/.git:/opt/electrum/.git:ro \
            -v $PWD/dist:/opt/electrum/dist \
            --rm \
            --workdir /opt/electrum/contrib/build-linux/sdist \
            --user $(id -u):$(id -g) \
            electrum-sdist-builder-img \
            ./make_sdist.sh
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: electrum-${{ github.sha }}-tarball
          path: dist/*.tar.gz

  source-only-tarball:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
             fetch-depth: 0

      - name: Prepare directories and git config
        run: |
            mkdir -p dist build
            chmod -R 777 dist build
            # Создаем временный gitconfig с правильными правами
            mkdir -p tmp_gitconfig
            git config --global --add safe.directory /opt/electrum > tmp_gitconfig/.gitconfig
            chmod 666 tmp_gitconfig/.gitconfig

      - name: Builder image
        run: docker build -t electrum-source-only-tarball-builder-img ./contrib/build-linux/sdist/

      - name: Compile source tarball
        run: |
          docker run \
            --name electrum-source-only-tarball-builder-cont \
            -v $PWD:/opt/electrum \
            -v $PWD/.git:/opt/electrum/.git:ro \
            -v $PWD/dist:/opt/electrum/dist \
            -v $PWD/build:/opt/electrum/build \
            -v $PWD/tmp_gitconfig/.gitconfig:/etc/gitconfig \
            --rm \
            --workdir /opt/electrum/contrib/build-linux/sdist \
            --user $(id -u):$(id -g) \
            --env OMIT_UNCLEAN_FILES=1 \
            electrum-source-only-tarball-builder-img \
            ./make_sdist.sh

      - name: Cleanup
        run: rm -rf tmp_gitconfig

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
           name: electrum-${{ github.sha }}-source-only-tarball
           path: dist/*.tar.gz

  macos:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.10"
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "14.1.0"
      - name: Prepare directories
        run: |
          mkdir -p dist
          chmod -R 777 dist
      - name: Install create-dmg
        run: brew install create-dmg
      - name: Build macOS package
        run: |
          ./contrib/osx/make_osx.sh
          create-dmg \
            --volname "Electrum-GRS" \
            --background ./contrib/osx/background.tiff \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Electrum-GRS.app" 200 190 \
            --hide-extension "Electrum-GRS.app" \
            --app-drop-link 600 185 \
            dist/Electrum-GRS-unsigned.dmg \
            dist/Electrum-GRS.app || \
          hdiutil create -fs HFS+ -srcfolder dist/Electrum-GRS.app -volname "Electrum-GRS" dist/Electrum-GRS-unsigned.dmg
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: electrum-${{ github.sha }}-macos
          path: dist/Electrum-GRS-unsigned.dmg
